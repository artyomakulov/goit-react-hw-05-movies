{"version":3,"file":"static/js/881.95cb6657.chunk.js","mappings":"mOACA,EAA6B,2BAA7B,EAAmE,yBAAnE,EAAuG,yBAAvG,EAA0I,wBAA1I,EAAkL,8B,SCInK,SAASA,IAAU,IAAD,IAC/B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAAoCL,EAAAA,EAAAA,UAAQ,UAACI,EAAaE,IAAI,gBAAlB,QAA8B,IAA1E,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAEjBC,QAAQC,IAAI,eAAgBR,GAC5B,IAAMS,EAAK,UAAGT,EAAaE,IAAI,gBAApB,QAAgC,GA+B3C,OAhBAQ,EAAAA,EAAAA,YAAU,WACM,KAAVD,GAGJE,EAAAA,EAAAA,IAAA,mGAEgGF,IAE7FG,MAAK,SAAAC,GACJf,EAAce,EAAIC,KAAKC,QACxB,IACAC,OAAM,SAAAC,GACLV,QAAQC,IAAIS,EACb,GACJ,GAAE,CAACR,KAGF,iCACE,gBAAKS,UAAWC,EAAhB,UACE,kBAAMC,SA5BS,SAAAC,GAEnB,GADAA,EAAEC,iBACiB,KAAfnB,EACF,OAAOoB,MAAM,sCAEftB,EAAgB,CAAEQ,MAAON,IACzBkB,EAAEG,OAAOC,OACV,EAqBK,WACE,kBACEC,KAAMvB,EACNwB,YAAY,yBACZC,SApCgB,SAAAC,GACxBzB,EAAcyB,EAAIL,OAAOM,MAC1B,KAoCO,mBAAQJ,KAAK,SAAb,0BAGJ,0BACE,eAAIR,UAAWC,EAAf,SACGtB,EAAWkC,OAAS,EACjBlC,EAAWmC,KACT,YAAwD,IAArDC,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YACnC,OACE,yBACE,gBAAIlB,UAAWC,EAAf,WACE,SAAC,KAAD,CACED,UAAWC,EACXkB,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMlC,GAHjB,SAKG6B,KAEH,yBACGE,GACC,gBACEI,IAAG,0CAAqCJ,GACxCK,IAAKP,EACLQ,OAAO,SAGT,gBACEF,IAAG,yDACHC,IAAI,YACJE,MAAM,MACND,OAAO,WAIb,eAAGxB,UAAWC,EAAd,2BAEE,4BACG,IACAc,GAA8B,oBA7B9BE,EAmCZ,IAEH,WAKb,C","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Movies_searchForm__J4-xw\",\"ulMovies\":\"Movies_ulMovies__AZCsB\",\"liMovies\":\"Movies_liMovies__XwF8x\",\"aMovies\":\"Movies_aMovies__vTTUt\",\"releaseMovies\":\"Movies_releaseMovies__SJUEz\"};","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport css from './Movies.module.css';\n\nexport default function Movies() {\n  const [searchFilm, setSearchFilm] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [inputValue, setInputValue] = useState(searchParams.get('query') ?? '');\n  const location = useLocation();\n\n  console.log('searchParams', searchParams);\n  const query = searchParams.get('query') ?? '';\n\n  const updateQueryString = evt => {\n    setInputValue(evt.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputValue === '') {\n      return alert('sorry, but you should write smthng');\n    }\n    setSearchParams({ query: inputValue });\n    e.target.reset();\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    axios\n      .get(\n        `https://api.themoviedb.org/3/search/movie?api_key=d0540c3f94b98f357d5d7224e563e83f&query=${query}`\n      )\n      .then(res => {\n        setSearchFilm(res.data.results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [query]);\n\n  return (\n    <>\n      <div className={css.searchForm}>\n        <form onSubmit={handleSubmit}>\n          <input\n            type={inputValue}\n            placeholder=\"Please enter film name\"\n            onChange={updateQueryString}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n      </div>\n      <div>\n        <ul className={css.ulMovies}>\n          {searchFilm.length > 0\n            ? searchFilm.map(\n                ({ release_date, original_title, id, poster_path }) => {\n                  return (\n                    <ul key={id}>\n                      <li className={css.liMovies}>\n                        <Link\n                          className={css.aMovies}\n                          to={`/movies/${id}`}\n                          state={{ from: location }}\n                        >\n                          {original_title}\n                        </Link>\n                        <div>\n                          {poster_path ? (\n                            <img\n                              src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n                              alt={original_title}\n                              height=\"300\"\n                            />\n                          ) : (\n                            <img\n                              src={`https://img10.joyreactor.cc/pics/post/anon-5573344.png`}\n                              alt=\"not found\"\n                              width=\"200\"\n                              height=\"300\"\n                            />\n                          )}\n                        </div>\n                        <p className={css.releaseMovies}>\n                          Release Date:\n                          <span>\n                            {' '}\n                            {release_date ? release_date : 'No date'}\n                          </span>\n                        </p>\n                      </li>\n                    </ul>\n                  );\n                }\n              )\n            : null}\n        </ul>\n      </div>\n    </>\n  );\n}\n\n// import { useState } from 'react';\n// import { Link, useLocation, useSearchParams } from 'react-router-dom';\n\n// export default function Movies() {\n//   const [searchTerm, setSearchTerm] = useState([]);\n//   const location = useLocation();\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const movieId = searchParams.get('movieId') ?? '';\n//   // console.log('searchParams', searchParams.get('a'))\n\n//   const updateQueryString = evt => {\n//     const movieIdValue = evt.target.value;\n//     if (movieIdValue === '') {\n//       return setSearchParams({});\n//     }\n//     setSearchParams({ movieId: movieIdValue });\n//   };\n\n//   const visibleMovies = searchTerm.filter(movie => movie.includes(movieId));\n\n//   console.log('location', location);\n\n//   return (\n//     <div>\n//       <form>\n//         <input\n//           type=\"search\"\n//           placeholder=\"Search movie\"\n//           value={searchTerm}\n//           // onChange={handleInputChange}\n//         />\n//         <button type=\"submit\">Search</button>\n//       </form>\n//       <ul>\n//         {searchTerm.map(movie => (\n//           <li key={movie.id}>\n//             <Link to={`/movie/${movie.id}`} state={{ from: location }}>\n//               {movie.title}\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n"],"names":["Movies","useState","searchFilm","setSearchFilm","useSearchParams","searchParams","setSearchParams","get","inputValue","setInputValue","location","useLocation","console","log","query","useEffect","axios","then","res","data","results","catch","error","className","css","onSubmit","e","preventDefault","alert","target","reset","type","placeholder","onChange","evt","value","length","map","release_date","original_title","id","poster_path","to","state","from","src","alt","height","width"],"sourceRoot":""}