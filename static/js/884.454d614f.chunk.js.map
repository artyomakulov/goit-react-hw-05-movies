{"version":3,"file":"static/js/884.454d614f.chunk.js","mappings":"4OAKe,SAASA,IAAgB,IAAD,IACrC,GAAwCC,EAAAA,EAAAA,UAAS,CAC/CC,GAAI,EACJC,MAAO,GACPC,QAAS,EACTC,IAAK,GACLC,SAAU,GACVC,OAAQ,KANV,eAAOC,EAAP,KAAqBC,EAArB,KAQMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WACnDC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,QAAQC,IAAI,WAAYT,IAExBU,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAE0CL,EAF1C,8CAIGM,MAAK,SAAAC,GACJd,EAAgB,CACdP,GAAIqB,EAAIC,KAAKtB,GACbC,MAAOoB,EAAIC,KAAKC,eAChBrB,QAASmB,EAAIC,KAAKE,aAClBrB,IAAKkB,EAAIC,KAAKG,YACdrB,SAAUiB,EAAIC,KAAKlB,SACnBC,OAAQgB,EAAIC,KAAKjB,QAEpB,GACJ,GAAE,CAACS,IACJ,IAAQb,EAA0CK,EAA1CL,MAAOE,EAAmCG,EAAnCH,IAAKD,EAA8BI,EAA9BJ,QAASE,EAAqBE,EAArBF,SAAUC,EAAWC,EAAXD,OAEvC,OACE,iCACE,wBAAKJ,KACL,0BACE,6BACE,SAAC,KAAD,CAAMyB,GAAIhB,EAAoBiB,QAA9B,uBAGJ,4BACE,0BACE,gBACEC,IAAG,0CAAqCzB,GACxC0B,IAAK5B,EACL6B,MAAM,MACNC,OAAO,WAGX,4BACE,wCAAgB7B,MAChB,sCACA,uBAAIE,KACJ,oCACA,wBACGC,GACCA,EAAO2B,KAAI,YAAmB,IAAhBhC,EAAe,EAAfA,GAAIiC,EAAW,EAAXA,KAChB,OAAO,wBAAcA,GAALjC,EACjB,aAIT,0BACE,2BACE,yBACE,SAAC,KAAD,CAAM0B,GAAG,UAAT,wBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,OAAT,0BAKN,SAAC,EAAAQ,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { useRef } from 'react';\nimport { Suspense, useState, useEffect } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState({\n    id: 0,\n    title: '',\n    average: 0,\n    img: '',\n    overview: '',\n    genres: [],\n  });\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const { movieId } = useParams();\n  console.log('location', location);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=d0540c3f94b98f357d5d7224e563e83f`\n      )\n      .then(res => {\n        setMovieDetails({\n          id: res.data.id,\n          title: res.data.original_title,\n          average: res.data.vote_average,\n          img: res.data.poster_path,\n          overview: res.data.overview,\n          genres: res.data.genres,\n        });\n      });\n  }, [movieId]);\n  const { title, img, average, overview, genres } = movieDetails;\n\n  return (\n    <>\n      <h1>{title}</h1>\n      <div>\n        <button>\n          <Link to={backLinkLocationRef.current}>Back</Link>\n        </button>\n      </div>\n      <div>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${img}`}\n            alt={title}\n            width=\"300\"\n            height=\"400\"\n          />\n        </div>\n        <div>\n          <p>User score: {average}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <ul>\n            {genres &&\n              genres.map(({ id, name }) => {\n                return <li key={id}>{name}</li>;\n              })}\n          </ul>\n        </div>\n      </div>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n        </ul>\n      </div>\n\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["MovieDetails","useState","id","title","average","img","overview","genres","movieDetails","setMovieDetails","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","console","log","useEffect","axios","then","res","data","original_title","vote_average","poster_path","to","current","src","alt","width","height","map","name","Suspense","fallback"],"sourceRoot":""}